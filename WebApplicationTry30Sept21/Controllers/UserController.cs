using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using WebApplicationTry30Sept21.Models;

// For more information on enabling Web API for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

namespace WebApplicationTry30Sept21.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class UserController : ControllerBase
    {
        CompanyContext context;
        public UserController(CompanyContext context)
        {
            this.context = context;
        }
        // GET: api/<UserController>
        [HttpGet]
        public IEnumerable<string> Get()
        {
            return new string[] { "value1", "value2" };
        }

        // GET api/<UserController>/5
        [HttpGet("{id}")]
        public string Get(int id)
        {
            return "value";
        }

        // POST api/<UserController>
        [HttpPost]
        public async Task<ActionResult<User>> Register([FromBody] UserDTO userDto)
        {
            string msg = "";
            try
            {
                //userDto :- UserName,Password
                //user:- UserName, PasswordHash,PasswordSalt
                //user will get added to database
                using var hmac = new HMACSHA512();
                User user = new User()
                {
                    UserName = userDto.UserName,
                    PasswordHash = hmac.ComputeHash(Encoding.UTF8.GetBytes(userDto.Password)),  //Generating the password hash
                    PasswordSalt = hmac.Key //Storing the Password Salt //Automatically PasswordSalt is  generated by hmac after PasswordHash
                };
                context.Add(user);
                context.SaveChanges();
                return user;
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
                msg = e.Message;
            }
            return BadRequest(msg);
        }

        // PUT api/<UserController>/5
        [HttpPut("{id}")]
        public void Put(int id, [FromBody] string value)
        {
        }

        [HttpPost]
        [Route("LogFunctionality")]
        public async Task<ActionResult<User>> Login([FromBody] UserDTO userDto)
        {
            var myUser=await context.Users.SingleOrDefaultAsync(usr=>usr.UserName==userDto.UserName);
            if (myUser == null)
                return Unauthorized("Invalid Username");
            using var hmac = new HMACSHA512(myUser.PasswordSalt);//generating Password Hash by using same Password Salt
            byte[] userPassword = hmac.ComputeHash(Encoding.UTF8.GetBytes(userDto.Password));
            for(int i=0;i<userPassword.Length;i++)
            {
                if (userPassword[i] != myUser.PasswordHash[i])
                    return Unauthorized("Invalid Password");
            }
            return myUser; 
        }

    }
} 
